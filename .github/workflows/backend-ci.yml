name: Backend CI

on:
  push:
    branches: [main]
    paths:
      - 'apps/backend/**'
      - 'packages/**'
      - '.github/workflows/backend-ci.yml'
  pull_request:
    branches: [main]
    paths:
      - 'apps/backend/**'
      - 'packages/**'
      - '.github/workflows/backend-ci.yml'

jobs:
  ci:
    name: Backend CI
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18, 20]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Install dependencies
        working-directory: apps/backend
        run: npm install --legacy-peer-deps

      - name: Install Biome
        uses: biomejs/setup-biome@v1
        with:
          version: latest

      - name: Lint with Biome
        run: npx @biomejs/biome lint apps/backend/src

      - name: Format check with Biome
        run: npx @biomejs/biome check apps/backend/src

      - name: Type check
        run: npm run backend:build

      - name: Build for production
        run: npm run backend:build
        env:
          NODE_ENV: production

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: backend-build-${{ matrix.node-version }}
          path: apps/backend/dist/
          retention-days: 7

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: ci

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Install dependencies
        working-directory: apps/backend
        run: npm install --legacy-peer-deps

      - name: Run npm audit
        run: npm audit --audit-level=moderate

      - name: Run Snyk security scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high --all-projects
        continue-on-error: true
