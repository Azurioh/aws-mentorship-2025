name: Backend Tests

on:
  push:
    branches: [main]
    paths:
      - 'apps/backend/**'
      - 'packages/**'
      - '.github/workflows/backend-test.yml'
  pull_request:
    branches: [main]
    paths:
      - 'apps/backend/**'
      - 'packages/**'
      - '.github/workflows/backend-test.yml'

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18, 20]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Run unit tests
        run: npm test --workspace=apps/backend
        env:
          NODE_ENV: test
          PORT: 3001
          API_BASE_URL: http://localhost:3001
          JWT_SECRET: test-secret
          AWS_KEY: test-key
          AWS_SECRET: test-secret
          REGION: us-east-1
          PROJECTS_TABLE: test-projects
          COGNITO_ID: test-cognito-id

      - name: Upload test coverage
        uses: codecov/codecov-action@v3
        with:
          file: apps/backend/coverage/lcov.info
          flags: backend-unit
          name: backend-unit-coverage
        if: matrix.node-version == '20'

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: unit-tests

    services:
      dynamodb-local:
        image: amazon/dynamodb-local:latest
        ports:
          - 8000:8000
        options: >-
          --health-cmd "curl -f http://localhost:8000/shell"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Wait for DynamoDB Local
        run: |
          while ! curl -s http://localhost:8000/shell > /dev/null; do
            echo "Waiting for DynamoDB Local..."
            sleep 1
          done

      - name: Run integration tests
        run: npm run test:integration --workspace=apps/backend
        env:
          NODE_ENV: test
          PORT: 3002
          API_BASE_URL: http://localhost:3002
          JWT_SECRET: test-secret
          AWS_KEY: test-key
          AWS_SECRET: test-secret
          REGION: us-east-1
          PROJECTS_TABLE: test-projects
          COGNITO_ID: test-cognito-id
          DYNAMODB_ENDPOINT: http://localhost:8000

  api-tests:
    name: API Tests
    runs-on: ubuntu-latest
    needs: integration-tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Build application
        run: npm run backend:build

      - name: Start application
        run: |
          npm run backend:start &
          sleep 10
        env:
          NODE_ENV: test
          PORT: 3003
          API_BASE_URL: http://localhost:3003
          JWT_SECRET: test-secret
          AWS_KEY: test-key
          AWS_SECRET: test-secret
          REGION: us-east-1
          PROJECTS_TABLE: test-projects
          COGNITO_ID: test-cognito-id

      - name: Run API tests
        run: |
          # Test health endpoint
          curl -f http://localhost:3003/health || echo "Health endpoint not available"

          # Test API documentation
          curl -f http://localhost:3003/docs || echo "Docs endpoint not available"

          # Test CORS headers
          curl -H "Origin: http://localhost:3000" \
               -H "Access-Control-Request-Method: GET" \
               -H "Access-Control-Request-Headers: X-Requested-With" \
               -X OPTIONS http://localhost:3003/ || echo "CORS test completed"

      - name: Stop application
        run: pkill -f "node.*dist/index.js" || true

  performance-tests:
    name: Performance Tests
    runs-on: ubuntu-latest
    needs: api-tests
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Install Artillery
        run: npm install -g artillery

      - name: Build application
        run: npm run backend:build

      - name: Start application
        run: |
          npm run backend:start &
          sleep 10
        env:
          NODE_ENV: test
          PORT: 3004
          API_BASE_URL: http://localhost:3004
          JWT_SECRET: test-secret
          AWS_KEY: test-key
          AWS_SECRET: test-secret
          REGION: us-east-1
          PROJECTS_TABLE: test-projects
          COGNITO_ID: test-cognito-id

      - name: Run performance tests
        run: |
          artillery quick --count 100 --num 10 http://localhost:3004/ || echo "Performance test completed"

      - name: Stop application
        run: pkill -f "node.*dist/index.js" || true
